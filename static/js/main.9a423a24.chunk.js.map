{"version":3,"sources":["components/birthday.js","App.js","reportWebVitals.js","index.js"],"names":["Birthday","props","currentText","useRef","useState","confetti","setConfetti","quoteArr","quotes","forEach","quote","useEffect","timer","setTimeout","options","strings","typeSpeed","backSpeed","loop","showCursor","cursorChar","typed","Typed","destroy","clearTimeout","Container","Row","Col","sm","className","id","ref","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"w0BAqEeA,EA9DE,SAACC,GAChB,IAAMC,EAAcC,iBAAO,IAC3B,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACIC,EAAW,GA8Cf,OA5CAN,EAAMO,OAAOC,SAAQ,SAAAC,GAEnB,OADAH,EAAQ,sBAAOA,GAAP,CAAiBG,EAAMA,WAKjCC,qBAAU,WAKR,IAJA,IAAMC,EAAQC,YAAW,WACvBP,GAAY,KACX,OAHW,aAMZ,IAAMQ,EAAU,CACdC,QAASR,EACTS,UAAW,GACXC,UAAW,GACXC,MAAM,EACNC,YAAY,EACZC,WAAY,KAERC,EAAQ,IAAIC,IAAM,SAAUR,GAClC,MAAM,CAAN,EAAO,kBAAMO,EAAME,cAVD,IAAblB,GAAoB,CAAC,IAAD,wCAa3B,IAAiB,IAAbA,EAAmB,CACrB,IAQMgB,EAAQ,IAAIC,IAAM,SARR,CACdP,QAAS,CAAC,kBACVC,UAAW,GACXC,UAAW,GACXC,MAAM,EACNC,YAAY,EACZC,WAAY,MAGd,OAAO,kBAAMC,EAAME,WAGrB,OAAO,WACLC,aAAaZ,OAOf,cAACa,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,UAAU,SAAtB,UACE,yBAASC,GAAG,QAAQC,IAAK7B,KACV,IAAbG,GACA,cAAC,IAAD,Y,MCpDG2B,MANf,WACE,OACE,cAAC,EAAD,CAAUxB,OAAQA,KCMPyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9a423a24.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Confetti from \"react-confetti\";\r\nimport Typed from \"typed.js\";\r\n\r\nconst Birthday = (props) => {\r\n  const currentText = useRef(\"\");\r\n  const [confetti, setConfetti] = useState(false);\r\n  let quoteArr = [];\r\n\r\n  props.quotes.forEach(quote => {\r\n    quoteArr = [...quoteArr, quote.quote]\r\n    return quoteArr\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setConfetti(true)\r\n    }, 39066);\r\n\r\n    while (confetti === false) {\r\n      const options = {\r\n        strings: quoteArr,\r\n        typeSpeed: 50,\r\n        backSpeed: 30,\r\n        loop: false,\r\n        showCursor: true,\r\n        cursorChar: \"_\",\r\n      }\r\n      const typed = new Typed(\"#texts\", options);\r\n      return () => typed.destroy();\r\n    }\r\n\r\n    if (confetti === true) {\r\n      const options = {\r\n        strings: [\"Happy birthday\"],\r\n        typeSpeed: 50,\r\n        backSpeed: 30,\r\n        loop: false,\r\n        showCursor: true,\r\n        cursorChar: \"_\",\r\n      }\r\n      const typed = new Typed(\"#texts\", options);\r\n      return () => typed.destroy();\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    }\r\n\r\n  });\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col sm={3} className=\"center\">\r\n          <section id=\"texts\" ref={currentText}></section>\r\n          {(confetti === true) &&\r\n            <Confetti />}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Birthday;","import quotes from \"./quotes.json\";\nimport Birthday from \"./components/birthday\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <Birthday quotes={quotes} />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}